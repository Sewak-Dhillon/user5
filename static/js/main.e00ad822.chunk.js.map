{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","type","id","href","role","onClick","toggle","htmlFor","toggleRedMode","toggleGreenMode","placeholder","TextForm","_useState","useState","_useState2","_slicedToArray","x","setX","_useState3","_useState4","text","setText","_Fragment","heading","onChange","event","target","value","rows","style","fontWeight","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","message","prototype","title","PropTypes","string","isRequired","defaultProps","App","setMode","setAlert","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.e00ad822.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} bg-${props.mode} navbar-expand-lg `}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdow n\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">Pricing</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown link\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"form-check form-switch\">\r\n      <input className=\"form-check-input mx-2\" onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className={`form-check-label text-${(props.mode === 'light' || props.mode === 'danger' || props.mode === 'success')? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n      <div className=\"form-check form-switch\">\r\n      <input className=\"form-check-input mx-2\" onClick={props.toggleRedMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className={`form-check-label text-${(props.mode === 'light' || props.mode === 'dark' || props.mode === 'success')? 'danger' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable RedMode</label>\r\n      </div>\r\n      <div className=\"form-check form-switch\">\r\n      <input className=\"form-check-input mx-2\" onClick={props.toggleGreenMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className={`form-check-label text-${(props.mode === 'light' || props.mode === 'dark' || props.mode === 'danger')? 'success' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable GreenMode</label>\r\n      </div>\r\n      <li className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className={`btn btn-outline-${props.mode === 'light'? 'dark' : 'light'} me-2`} type=\"submit\">Search</button>\r\n        </li>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype = {title : PropTypes.string.isRequired,}\r\n\r\nNavbar.defaultProps = {title : 'Set title',}","import React, {useState} from 'react'\r\n\r\n// state basically defines the current state of an application.\r\n// useState is helpful to change state of a parameter\r\nexport default function TextForm(props) {\r\n\r\nconst handleUpClick = () =>{\r\n    setText(text.toUpperCase())\r\n    props.showAlert(\"Converted to Upper case\",\"warning\")\r\n}\r\n\r\nconst handleLowerClick = () =>{\r\n    setText(text.toLowerCase())\r\n    props.showAlert(\"Converted to Lower case\",\"warning\")\r\n}\r\n\r\nconst handleClearClick = () =>{\r\n    setText(\"\")\r\n    props.showAlert(\"Cleared Text\",\"warning\")\r\n}\r\n\r\nconst handleCopy = () =>{\r\n    var text = document.getElementById('myBox')\r\n    text.select()\r\n    navigator.clipboard.writeText(text.value)\r\n    props.showAlert(\"Content Copied\",\"warning\")\r\n}\r\n\r\nconst handleRemoveExtraSpace = () =>{\r\n    var newText = text.split(/[ ]+/)\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"EXtra Spaces removed\",\"warning\")\r\n}\r\n\r\nconst handleBoldClick = () =>{\r\n    setX(!x)\r\n    props.showAlert(\"Text Bold\",\"warning\")\r\n}\r\n\r\nconst handleOnChange = (event) =>{\r\n    setText(event.target.value)\r\n\r\n}\r\n\r\nconst [x,setX] = useState(false);\r\nconst [text,setText] = useState('');// doing state change.\r\n// text = \"mkdlvmdf\" Wrong way to change the state.\r\n// setText(\"sdvdsvsdf\") this is how you can change the state\r\nreturn (\r\n    <>\r\n    <div className='container'>\r\n    <h1 className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" onChange={handleOnChange} value={text} id=\"myBox\" rows=\"10\" style={x ? {fontWeight : 'bold'} : {fontWeight : 'normal'}}></textarea>\r\n        <button className={`btn btn-${props.mode === 'light'? 'primary' : props.mode} my-3 mx-2`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className={`btn btn-${props.mode === 'light'? 'primary' : props.mode} my-3 mx-2`} onClick={handleLowerClick}>Convert to Lowercase</button>\r\n        <button className={`btn btn-${props.mode === 'light'? 'primary' : props.mode} my-3 mx-2`} onClick={handleClearClick}>Clear Text</button>\r\n        <button className={`btn btn-${props.mode === 'light'? 'primary' : props.mode} my-3 mx-2`} onClick={handleBoldClick}>Bold Text</button>\r\n        <button className={`btn btn-${props.mode === 'light'? 'primary' : props.mode} my-3 mx-2`} onClick={handleCopy}>Copy Text</button>\r\n        <button className={`btn btn-${props.mode === 'light'? 'primary' : props.mode} my-3 mx-2`} onClick={handleRemoveExtraSpace}>Remove Extra Space</button>\r\n\r\n    </div>\r\n    </div>\r\n    <div className=\"container\">\r\n        <h2 className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>Your Text Summary</h2>\r\n        <b className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>No of Words : </b><span className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>{text.split(\" \").length-1}</span>\r\n        <br />\r\n        <b className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>No of Character : </b><span className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>{text.length}</span>\r\n        <br />\r\n        <b className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>Time to Read : </b><span className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>{(text.split(\" \").length-1) * 0.008} min</span> \r\n        <br />\r\n        <h2 className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>Preview</h2>\r\n        <p className={`text-${props.mode === 'light'? 'dark' : 'light'}`}>{text.length > 0?text:\"Enter something in textBox to preview it here\"}</p>\r\n    </div>\r\n</>\r\n)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\nconst capitalize = (word) =>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n}\r\nreturn (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">  \r\n    <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n)\r\n}\r\n","import {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from 'react-router-dom';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// Props Tutorial (Properties )\nfunction App() {\n  const[mode,setMode] = useState('light')\n  const[alert,setAlert] = useState(null)\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      message : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#495057'\n      showAlert(\"Dark Mode Enabled\",\"success\")\n      document.title = \"TextUtil - Dark Mode \"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode Enabled\",\"success\")\n      document.title = \"TextUtil - Home \"\n    }\n  }\n  const toggleRedMode = ()=>{\n    if(mode === 'light' || mode === 'dark'){\n      setMode('danger')\n      document.body.style.backgroundColor = '#d75965'\n      showAlert(\"Red Mode Enabled\",\"success\")\n      document.title = \"TextUtil - Red Mode \"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode Enabled\",\"success\")\n      document.title = \"TextUtil - Home \"\n    }\n  }\n\n  const toggleGreenMode = ()=>{\n    if(mode === 'light' || mode === 'dark' || mode === 'danger'){\n      setMode('success')\n      document.body.style.backgroundColor = '#5d937a'\n      showAlert(\"Green Mode Enabled\",\"success\")\n      document.title = \"TextUtil - Green Mode \"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode Enabled\",\"success\")\n      document.title = \"TextUtil - Home \"\n    }\n  }\n  // props are something that your are passing as argument in components\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title = \"TextUtil\" mode = {mode} toggle={toggleMode} toggleRedMode = {toggleRedMode} toggleGreenMode = {toggleGreenMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <TextForm showAlert = {showAlert} heading = \"Enter Your Text Below\" mode = {mode}/>\n      {/* <Routes> */}\n      {/* <Route exact path=\"/about\" element={<About/>} /> */}\n      {/* <Route exact path=\"/\" element = {<TextForm showAlert = {showAlert} heading = \"Enter Your Text Below\" mode = {mode}/>}/> */}\n      {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}